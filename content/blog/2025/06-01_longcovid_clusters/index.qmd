---
editor_options: 
  markdown: 
    wrap: sentence
title: "Unpacking the Clusters: Deeper Connections in My Long Covid Data"
format: hugo-md
author: Dr. Mowinckel
date: '2025-06-01'
categories: []
tags:
  - R
  - health-data
  - longcovid
slug: "visible-clusters"
image: index.markdown_strict_files/figure-markdown_strict/featured-1.png
image_alt: ""
summary: "Following up on my year of Long Covid tracking with the Visible app, this post dissects the four distinct symptom clusters identified in my data: Menstruation, Exertion, Emotional, and Neurological. I'll share personal anecdotes and observations that validate these data-driven connections, exploring what it means for my daily experience and how understanding these groups of symptoms helps in managing my condition. Discover the intricate web of Long Covid symptoms and how data can shed light on their often-invisible interplay."
seo: "Diving deeper into my Long Covid data, I explore 4 symptom clusters: Menstruation, Exertion, Emotional, & Neurological. Insights & personal connections."
---

```{r}
#| include: false
#| label: read-data
library(ggplot2)
visible <- readRDS(here::here(
  "content/blog/2025/05-01_visible/visible_clean.rds"
))
visible_wide <- readRDS(here::here(
  "content/blog/2025/05-01_visible/visible_wide.rds"
))
clustdt <- readRDS(here::here("content/blog/2025/05-01_visible/clusters.rds"))
theme_set(theme_light())
theme_update(
  strip.background = element_rect(fill = "#000"),
  axis.text = element_text(angle = 60, hjust = 1)
)

options(
  "ggplot2.discrete.colour" = scale_colour_viridis_d,
  "ggplot2.discrete.fill" = scale_fill_viridis_d,
  "ggplot2.continuous.colour" = scale_colour_viridis_c,
  "ggplot2.continuous.fill" = scale_fill_viridis_c
)
```

I thought I'd continue on exploring my long covid data this month too. 
My [last post](/blog/2025/visible) we dived a little into the data I have gathered using the [Visible app](https://www.makevisible.com/) for over a year now.
I showed you how the Visible app helped me monitor my heart rate and HRV, gave me a "stability score" each morning, and provided monthly functional capacity assessments (the awesome FUNCAP27). 
We looked at how my data hinted at progress, particularly after I started implementing Dr. Simon's pacing strategies (taking frequent micro-breaks, even for small tasks).

But the really cool part I touched on was when I used clustering analysis to see how my symptoms grouped together.
It was fascinating to see the data confirm connections I'd felt instinctively but hadn't quite put into words. 
It revealed four distinct "syndromes" of symptoms that tended to show up together for me.

So, in this next post, I'm going to take an even deeper dive into those clusters, giving you a more personal, anecdotal look at what those symptom groups mean for my daily life and how understanding them is helping me manage this tricky illness.

Okay, here's a draft for your second section, "Recapping the Clusters," keeping it simple and personable as we discussed.

***

## Recapping the Clusters: Unmasking the Symptom Syndromes

Last time, we dipped our toes into the fascinating world of clustering. 
For those who aren't familiar, imagine trying to organize a messy pile of LEGO bricks. 
You might group all the red ones together, all the long ones, or all the ones with wheels. 
Clustering in data does something similar: it finds items (in this case, my symptoms and tracked metrics) that are naturally similar or tend to show up together, and groups them.

It was an absolutely *awesome* moment for me when I ran this analysis. 
I'd always felt that certain symptoms seemed to "travel together," but seeing it laid out by the data was incredibly validating. 
And one thing that is very good when you have a hidden illness like this (like, I don't _look_ sick) is seeing some validation that stuff is going on.

![Plot of clustered symptoms and trackers, showing four top level clusters, with varying degrees and number of items inside.](../05-01_visible/index.markdown_strict_files/figure-markdown_strict/clustering-1.png)

From the analysis, four main clusters emerged, each telling its own story about how my body experiences Long Covid. Here they are:

1.  **Menstruation:** This cluster grouped "period," "muscles aches," "stomach pain," "light sensitivity," and "constipation."
    * *My initial thought:* "Okay, this makes so much sense. This is'nt long-covid stuff, it's 'just' period stuff. These are all (except light sensitivity) symptoms that have always plagued me during my period."

2.  **Exertion:** Here, we saw "stability score," "heart rate variability," "mental and physical exertion," and "lightness of breath."
    * *My initial thought:* "This is the core of what stability score is based on, isn't it? The physical output directly impacting my energy and my heart's response. Biggest surprise was that resting heart rate was **not** in here, but seeing 'lightness of breath' in here confirms that feeling of struggling to breathe after minimal effort especially on poor days."

3.  **Emotional:** This cluster contained "emotional exertion," "depression," and "nausea."
    * *My initial thought:* "This one is a no brainer for me, yeah, that is my brain doing its thing. As a person who generally struggles with depression and low mood, this clustering is meaningful. Biggest surprise here was that anxiety was not clustered in with it all."

4.  **Neurological:** This was the largest cluster, including "fatigue," "sleep," "joint pain," "headache," "palpitations," "resting heart rate," "anxiety," and "crash (PEM)."
    * *My initial thought:* "This really encapsulates the 'Long Covid feeling.' All these symptoms are the heavy hitters that define my worst days. It's the central hub of what pulls me down. While there is clear meaning behind anxienty being in here (because on poor days I get feelings of despair around not improving), I still though it would cluster together with depression."


## The Predictive Power of Clusters?

Alright, let's jump straight to exploring some code and the idea of "predictive power" within these clusters. 
Maybe this data can help me in the next step of this journey.

### TFinding Lead Indicators in My Data

While the clustering analysis beautifully shows which symptoms love to hang out together, the next big question for someone living with Long Covid is: Can this data help me *predict* when a flare-up or crash might be coming? 
Are there "lead indicators" within these clusters that could give me a warning?

This is where things get really interesting for a data enthusiast like me. 
It's about looking at how one component of a cluster might behave *before* others, potentially signaling an impending shift.

Let's take a look at the **Emotional Cluster**, which groups **"emotional exertion"**, **"depression"**, and **"nausea"**. 
My personal experience often tells me that a particularly demanding day, especially emotionally, can leave me feeling drained and unwell the next day. 
Can the data reflect this?

To explore this, we can use a technique called **lagging**. 
This means we look at the value of a variable (like emotional exertion) on a previous day and compare it to another variable (like depression or nausea) on the current day. 
It's a simple way to look for a potential cause-and-effect chain over time.

First, I'll select the relevant columns from our `visible_wide` dataset and arrange them by date to ensure the lagging works correctly.

```{r}
#| label: wide
visible_wide
```

```{r}
# Select relevant columns for the Emotional Cluster
emotional_cluster_trackers <- c(
  "Activity_Emotional_Emotional exertion",
  "Symptoms_Brain_Depression",
  "Symptoms_Gastrointestinal_Nausea"
)

# Prepare data for lagged analysis
lagged_emotional_data <- visible_wide |>
  select(odate, all_of(emotional_cluster_trackers)) |>
  arrange(odate) |> # Crucial: ensure data is ordered by date
  mutate(
    # Create a lagged version of 'Emotional exertion'
    # 'lag(variable, n=1)' means the value from the previous day
    emotional_exertion_lag1 = lag(
      `Activity_Emotional_Emotional exertion`,
      n = 1L
    ),
    emotional_exertion_lag2 = lag(
      `Activity_Emotional_Emotional exertion`,
      n = 2L
    )
  ) |>
  drop_na() # Remove rows where lagged values are NA (first few days)

# Let's inspect the first few rows to see the lagged values
# head(lagged_emotional_data)
```

Now that we have our lagged data, let's visualize if higher emotional exertion on a previous day seems to correlate with higher depression or nausea scores on the current day. We'll use scatter plots with a smoothed line (`geom_smooth`) to help us see any trends.

```{r}
# Plot 1: Emotional Exertion (Lag 1) vs. Depression
p_exertion_dep_lag1 <- ggplot(
  lagged_emotional_data,
  aes(x = emotional_exertion_lag1, y = `Symptoms_Brain_Depression`)
) +
  geom_point(alpha = 0.4, color = "#440154") + # Use a color from viridis palette
  geom_smooth(method = "lm", se = FALSE, color = "#21908d") + # Linear model smooth line
  labs(
    title = "Emotional Exertion (Day D-1) vs. Depression (Day D)",
    x = "Emotional Exertion Score (Previous Day)",
    y = "Depression Score (Current Day)"
  ) +
  theme_minimal()

# Plot 2: Emotional Exertion (Lag 1) vs. Nausea
p_exertion_nausea_lag1 <- ggplot(
  lagged_emotional_data,
  aes(x = emotional_exertion_lag1, y = `Symptoms_Gastrointestinal_Nausea`)
) +
  geom_point(alpha = 0.4, color = "#440154") +
  geom_smooth(method = "lm", se = FALSE, color = "#21908d") +
  labs(
    title = "Emotional Exertion (Day D-1) vs. Nausea (Day D)",
    x = "Emotional Exertion Score (Previous Day)",
    y = "Nausea Score (Current Day)"
  ) +
  theme_minimal()

# Display plots side-by-side using patchwork
p_exertion_dep_lag1 + p_exertion_nausea_lag1
```

**What these plots tell us:**

Looking at these graphs, we're trying to see if there's an upward trend. For me, these plots visually confirm that higher "emotional exertion" on one day often aligns with slightly higher "depression" and "nausea" scores the *following* day. It's not a perfect correlation, but the upward slope in the smoothed lines suggests a tendency. This echoes my lived experience: if I push my emotional boundaries, my body often responds with a cascade of symptoms from this cluster.

While this simple lagged analysis is exploratory and doesn't prove causation, it provides a fascinating hint. It suggests that paying close attention to my "emotional exertion" score might be an early warning sign for the other symptoms in this cluster. For someone with Long Covid, any little heads-up can be incredibly valuable for adjusting pacing and preventing a full-blown flare-up.



* **Looking for Warning Signs:** Discuss if observing certain symptoms within a cluster starting to flare helps you predict an impending worsening of the *entire* cluster (or even a crash).
    * *Example:* "If I notice an unusual spike in my emotional exertion score, the data suggests I should be extra vigilant for depression and nausea."
* **Early Intervention:** Does understanding these clusters enable you to implement early interventions or pacing adjustments to potentially mitigate a full-blown flare-up of the associated symptoms?
* **Limitations of Prediction:** Acknowledge that correlation isn't causation, and personal data, while insightful, isn't a perfect predictive model.

#### 5. What the Clusters Don't Tell Me (Limitations & Nuances)
* **Missing Data/Context:**
    * Are there important symptoms or external factors you don't track that *could* influence these clusters (e.g., weather, stress from specific life events not captured in "emotional exertion")?
    * Does the data capture severity nuances well enough for *all* symptoms? (You mentioned struggling with self-evaluation for some symptoms in the previous post – this is a good place to bring that up again in context of the clusters).
* **Individual Variability:** Emphasize that your clusters are *personal*. Other Long Covid patients might have different symptom groupings.
* **Dynamic Nature:** Are these clusters fixed, or do you anticipate they might evolve as you recover or if your condition changes?

#### 6. Future Explorations: Beyond Basic Clustering
* **Deeper Statistical Analysis:** What other statistical methods would you *like* to apply to confirm or further explore these clusters (e.g., network analysis to see direct symptom relationships, or advanced time-series analysis to model transitions between states)?
* **Integrating More Data:** Reiterate your interest in incorporating Garmin data – how might *that* data enrich or change these clusters (e.g., continuous HR/stress data potentially linking more directly to exertion/neurological clusters)?
* **Qualitative vs. Quantitative:** How do you balance the scientific rigor of data analysis with the subjective, lived experience of chronic illness?

#### 7. Conclusion: Validation and Empowerment
* **Summary of Key Insights:** Briefly reiterate the most important takeaways from analyzing your symptom clusters.
* **Personal Impact:** Reiterate how this deeper understanding provides you with a sense of validation, self-awareness, and potentially more effective tools for managing your Long Covid.
* **Empowerment:** Conclude on a hopeful and empowering note – that personal data tracking, even with its complexities, can be a powerful tool for navigating chronic illness.
* **Call to Action:** "Have you noticed similar symptom clusters in your own Long Covid or chronic illness journey? What connections have you found most surprising or insightful?"

```{r}
#| label: recap

library(tidyverse)
library(cluster)
library(pvclust)
library(ggraph)
library(tidygraph)
library(patchwork) # For combining plots

ggraph(clustdt, "circlepack") +
  geom_node_circle(
    aes(fill = depth),
    n = 50,
    show.legend = FALSE
  ) +
  geom_node_label(
    aes(label = tracker),
    repel = TRUE,
    size = 2
  ) +
  coord_fixed()
```

```{r}
#| label: period
# Define members of the 'Menstruation' cluster (adjust names as per your actual data)
menstruation_cluster_trackers <- c(
  "Event_Period",
  "Symptoms_Muscles_Muscles aches",
  "Symptoms_Gastrointestinal_Stomach pain",
  "Symptoms_Sensory_Light sensitivity",
  "Symptoms_Gastrointestinal_Constipation"
)

# Filter the wide data for just these columns and odate
menstruation_data_wide <- visible_wide |>
  select(odate, all_of(menstruation_cluster_trackers)) |>
  # For plotting, pivot longer again
  pivot_longer(
    cols = -odate,
    names_to = "tracker",
    values_to = "value"
  ) |>
  # Clean up tracker names for better plotting labels
  mutate(
    tracker = str_replace_all(tracker, "Symptoms_", ""),
    tracker = str_replace_all(tracker, "Gastrointestinal_", ""),
    tracker = str_replace_all(tracker, "Sensory_", ""),
    tracker = str_replace_all(tracker, "Muscles_", ""),
    tracker = str_replace_all(tracker, "Event_", "")
  ) |>
  # For 'Period' event, value is often 1, for others it's a score.
  # Normalize if needed, or handle separately. Here, just plot.
  drop_na(value)

# Plotting the co-occurrence of symptoms in this cluster
ggplot(menstruation_data_wide, aes(x = odate, y = value, color = tracker)) +
  geom_line(alpha = 0.6) + # Line for general trend
  geom_point(alpha = 0.4) + # Points for daily observations
  facet_wrap(~tracker, scales = "free_y", ncol = 1) + # Each tracker in its own panel
  scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
  labs(
    title = "Co-occurrence of Menstruation Cluster Symptoms",
    subtitle = "How symptoms grouped by clustering move together over time",
    x = "Date",
    y = "Score/Value",
    color = "Symptom/Event"
  ) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
#| label: period2
# Select numeric data for the Menstruation cluster
menstruation_cluster_numeric <- visible_wide_num |>
  select(contains(c(
    "Period",
    "Muscles_Muscles aches",
    "Stomach pain",
    "Light sensitivity",
    "Constipation"
  ))) # Use contains or exact names based on your column names

# Ensure columns are present and handle potential NAs if any specific to this subset
menstruation_cluster_numeric <- menstruation_cluster_numeric |>
  drop_na() # Drop NAs only for these specific columns for correlation

# Compute correlation matrix
menstruation_cor_matrix <- cor(menstruation_cluster_numeric)

# Convert to tibble for plotting
menstruation_cor_data <- as_tibble(menstruation_cor_matrix, rownames = "var") |>
  pivot_longer(-var, names_to = "name", values_to = "value") |>
  mutate(
    # Clean up names for plot labels
    var = str_replace_all(var, "Event_Period", "Period"),
    var = str_replace_all(
      var,
      "Symptoms_Muscles_Muscles aches",
      "Muscles aches"
    ),
    var = str_replace_all(
      var,
      "Symptoms_Gastrointestinal_Stomach pain",
      "Stomach pain"
    ),
    var = str_replace_all(
      var,
      "Symptoms_Sensory_Light sensitivity",
      "Light sensitivity"
    ),
    var = str_replace_all(
      var,
      "Symptoms_Gastrointestinal_Constipation",
      "Constipation"
    ),
    name = str_replace_all(name, "Event_Period", "Period"),
    name = str_replace_all(
      name,
      "Symptoms_Muscles_Muscles aches",
      "Muscles aches"
    ),
    name = str_replace_all(
      name,
      "Symptoms_Gastrointestinal_Stomach pain",
      "Stomach pain"
    ),
    name = str_replace_all(
      name,
      "Symptoms_Sensory_Light sensitivity",
      "Light sensitivity"
    ),
    name = str_replace_all(
      name,
      "Symptoms_Gastrointestinal_Constipation",
      "Constipation"
    )
  )

# Plotting the heatmap for this specific cluster
ggplot(menstruation_cor_data, aes(x = name, y = var, fill = value)) +
  geom_tile() +
  scale_fill_viridis_c(name = "Correlation") +
  labs(
    title = "Correlation Heatmap: Menstruation Cluster",
    x = "",
    y = ""
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
#| label: emotions
# Focus on Emotional Cluster components
emotional_cluster_trackers <- c(
  "Activity_Emotional_Emotional exertion",
  "Symptoms_Brain_Depression",
  "Symptoms_Gastrointestinal_Nausea"
)

# Select relevant columns and create lagged variables
# Let's see if Emotional exertion on day D predicts Depression/Nausea on day D+1 or D+2
lagged_emotional_data <- visible_wide |>
  select(odate, all_of(emotional_cluster_trackers)) |>
  arrange(odate) |> # Ensure data is ordered by date
  mutate(
    # Lag 'Emotional exertion' by 1 and 2 days
    emotional_exertion_lag1 = lag(
      `Activity_Emotional_Emotional exertion`,
      n = 1L
    ),
    emotional_exertion_lag2 = lag(
      `Activity_Emotional_Emotional exertion`,
      n = 2L
    )
  ) |>
  drop_na() # Remove rows with NAs introduced by lagging

# Scatter plot: Emotional Exertion (lag 1) vs. Depression
p1 <- ggplot(
  lagged_emotional_data,
  aes(x = emotional_exertion_lag1, y = `Symptoms_Brain_Depression`)
) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(
    title = "Emotional Exertion (Lag 1) vs. Depression",
    x = "Emotional Exertion (Previous Day)",
    y = "Depression Score"
  ) +
  theme_minimal()

# Scatter plot: Emotional Exertion (lag 1) vs. Nausea
p2 <- ggplot(
  lagged_emotional_data,
  aes(x = emotional_exertion_lag1, y = `Symptoms_Gastrointestinal_Nausea`)
) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "Emotional Exertion (Lag 1) vs. Nausea",
    x = "Emotional Exertion (Previous Day)",
    y = "Nausea Score"
  ) +
  theme_minimal()

# Combine plots using patchwork
p1 + p2
```

```{r}
#| label: neurological
# Define members of the 'Neurological' cluster
# Use column names as they appear in visible_wide_num
neurological_cluster_trackers <- c(
  "Symptoms_Fatigue_Fatigue",
  "Measurement_Sleep score", # This one is 'Measurement' category
  "Symptoms_Muscles_Joint pain",
  "Symptoms_Brain_Headache",
  "Symptoms_Heart and Lungs_Palpitations",
  "Measurement_Resting HR", # This one is 'Measurement' category
  "Symptoms_Brain_Anxiety",
  "Event_Crash" # This one is 'Event' category
)

# Filter and prepare data for neurological cluster score
neurological_data_for_score <- visible_wide |>
  select(odate, all_of(neurological_cluster_trackers)) |>
  drop_na() # Drop NAs for complete observations for score calculation

# Normalize values (min-max scaling to 0-1 range for each column)
normalize <- function(x) {
  if (min(x, na.rm = TRUE) == max(x, na.rm = TRUE)) {
    return(rep(0, length(x))) # Avoid division by zero if all values are same
  }
  (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}

neurological_data_normalized <- neurological_data_for_score |>
  mutate(across(all_of(neurological_cluster_trackers), normalize))

# Calculate the mean score for the neurological cluster for each day
neurological_cluster_score <- neurological_data_normalized |>
  rowwise() |>
  mutate(
    neurological_score = mean(c_across(all_of(neurological_cluster_trackers)))
  ) |>
  ungroup()

# Plot the neurological cluster score over time
ggplot(neurological_cluster_score, aes(x = odate, y = neurological_score)) +
  geom_line(color = "purple") +
  geom_point(alpha = 0.6, color = "purple") +
  geom_smooth(method = "loess", se = FALSE, color = "darkred") + # To show overall trend
  labs(
    title = "Neurological Cluster Activity Over Time",
    subtitle = "Higher score indicates higher overall activity/severity of cluster symptoms",
    x = "Date",
    y = "Normalized Neurological Score (0-1)"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

