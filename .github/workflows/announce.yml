on: [workflow_dispatch]


name: Announce on social media

jobs:
  announce:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PROFILE: social_media
    steps:
      - uses: actions/checkout@v4
      - name: Get curl and jq and yq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl yq

      - name: 📝 Get latest blog post 📝
        run: |
          BLOG_PATH="content/blog"

          # Find the latest blog post
          latest_post=$(find -f "${BLOG_PATH}" | grep /index.md$ | grep -v "XX-XX" | sort | tail -n1)

          # extract yaml
          post_yaml=$( sed -n '/^---$/,/^---$/p' ${latest_post} | sed '1d;$d')

          # extract date
          echo "POST_DATE=${echo $post_yaml| yq '.date'}" >> $GITHUB_ENV

          # Extract the URL from the slug
          slug=$(printf '%s/%s' \
            $(echo $latest_post | cut -d/ -f3) \
            $(echo $post_yaml| yq '.slug')
          )
          url="https://drmowinckels.io/blog/${slug}"

          # Extract image
          image=$(printf '%s/%s' \
            $(dirname $latest_post) \
            $(echo $post_yaml| yq '.image')
          )
          echo "IMAGE=${image}" >> $GITHUB_ENV

          # Extract the title from yaml
          title=$(echo $post_yaml| yq '.title')

          # Extract summary using yml
          summary=$(echo $post_yaml| yq '.summary')

          # Extract tags
          tags=$(echo $post_yaml | yq -o=json '.tags' | jq -r '.[] | "#"+.')
          hastags=$(echo "$tags" | tr '\n' ' ' | sed 's/ $//')

          # Insert random fun emoji
          emojis=("🦄" "🦜" "🦣" "🦥" "🦦" "🦧" "🦨" "🦩" "🦪" \
              "🦫" "🦬" "🦭" "🦮" "🦯" "🦰" "🦱" "🦲" "🦳" "🦴" \
              "🦵" "🦶" "🦷" "🦸" "🦹" "🦺" "🦻" "🦼" "🦽" "🦾" \
              "🦿" "🧀" "🧁" "🧂" "🧃" "🧄" "🧅" "🧆" "🧇" "🧈" \
              "🧉" "🧊" "🧋" "🧌" "🧍" "🧎" "🧏" "🧐" "🧑" "🧒" \
              "🧓" "🧔" "🧕" "🧖" "🧗" "🧘" "🧙" "🧚" "🧛" "🧜" \
              "🧝" "🧞" "🧟" "🧠" "🧡" "🧢" "🧣" "🧤" "🧥" "🧦" \
              "🧧" "🧨" "🧩" "🧪" "🧫" "🧬" "🧭" "🧮" "🧯" "🧰" \
              "🧱" "🧲" "🧳" "🧴" "🧵" "🧶" "🧷" "🧸" "🧹" "🧺" \
              "🧻" "🧼" "🧽" "🧾" "🧿")
          random_emoji=${emojis[$RANDOM % ${#emojis[@]}]}

          # Compose message
          message="📝 New blog post 📝
            \n\n '${title}' \
            \n\n ${random_emoji}  ${summary} \
            \n\n 👀  Read more at ${url} \
            \n\n ${hastags}"
          echo "MESSAGE=${message}" >> $GITHUB_ENV


      - name: 🦣 Toot it! 🦣
        if: ${{ env.POST_DATE }} > (date -d "-2 days" +%Y-%m-%d)
        env:
          MASTODON_INSTANCE: fosstodon.org
        run:  |
          # First, upload the media and get the media ID
          MEDIA_ID=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.MASTO_KEY }}" \
            -F "file=@./${{ env.IMAGE }}" \
            https://${MASTODON_INSTANCE}/api/v1/media | jq -r '.id')

          # Then, create a new status with the media attached
          toot=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.MASTO_KEY }}" \
            -F "status=${{ env.MESSAGE }}" \
            -F "media_ids[]=${MEDIA_ID}" \
            https://${MASTODON_INSTANCE}/api/v1/statuses | jq -r '.id')

          # Display clickable url
          echo "🦣 Tooted! 🦣"
          echo "https://${MASTODON_INSTANCE}/web/statuses/${toot}"

      - name: Bluesky!
        if: ${{ env.POST_DATE }} > (date -d "-2 days" +%Y-%m-%d)
        env:
          image: ${{ env.IMAGE }}
          handle: "drmowinckels.bsky.social"
        run: |
          auth_resp=$(curl \
            -H 'Content-Type: application/json' \
            -d '{
              "identifier": "'${handle}'", 
              "password": "'${{ secrets.BLUESKY_PWD }}'"
            }' \
            https://bsky.social/xrpc/com.atproto.server.createSession)

          # Create post details
          ACCESS_JWT=$(echo $auth_resp | jq '.accessJwt'| tr -d '"' )
          DID=$(echo $auth_resp | jq '.did' | tr -d '"' )
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          # Upload image
          image_resp=$(curl \
            -H "Authorization: Bearer ${ACCESS_JWT}" \
            -H "Content-Type: image/${image##*.}" \
            --data-binary @./${image} \
            https://bsky.social/xrpc/com.atproto.repo.uploadBlob
          )
          image_blob=$(echo $image_resp | jq '.blob' )

          # Post it
          post_resp=$(curl  \
            https://bsky.social/xrpc/com.atproto.repo.createRecord \
            -H "Authorization: Bearer ${ACCESS_JWT}" \
            -H 'Content-Type: application/json' \
            -d '{
              "repo": "'${DID}'",
              "collection": "app.bsky.feed.post", 
              "record": {
                "$type": "app.bsky.feed.post",
                "text": "${{ env.MESSAGE }}", 
                "createdAt": "'${DATE}'",
                "embed": {
                  "$type": "app.bsky.embed.images",
                  "images": [{
                    "image": '${image_blob}',
                    "alt": "Featured image of the blogpost"
                  }]
                }
              }
            }'
          )
          bid=$(echo $post_resp | jq '.uri' | cut -d/ -f5 | tr -d '"' )

          # Display clickable url
          echo "🦋 Skeet it! 🦋"
          echo "https://bsky.app/profile/${${handle}}/post/${bid}"
