on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches: 
      - master
  schedule:
    - cron: '0 0 * * 0'

name: Build site

jobs:
  render:
    name: Build site
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 10

      - name: Get Hugo version
        id: hugo_vr
        run: |
          ver=$(cat .Rprofile | grep hugo.version | cut -d"=" -f2 | sed -e s.\"..g | sed -e s.\ ..g)
          echo ".Rprofile sets hugo version to $ver"
          echo "::set-output name=value::${ver}"
          
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ steps.vars.outputs.hugo_vr }}
          extended: true

      - name: Install npm packages
        run: |
          npm install netlify-cli -g
          npm install
      
      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        timeout-minutes: 60

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.12'

      - name: Run Renv
        uses: r-lib/actions/setup-renv@v1
        with:
          cache-version: 2
          
      - name: Install tinytex
        uses: r-lib/actions/setup-tinytex@v1

      # - name: Render about me & cv
      #   run: |
      #     blogdown::build_site(local = FALSE,
      #                          run_hugo = FALSE,
      #                          build_rmd = "content/about/_index.Rmd",)
      #     rmarkdown::render("content/about/resume/am_mowinckel_cv.Rmd")
      #   shell: Rscript {0}
      #   env:
      #    ORCID_TOKEN: ${{ secrets.ORCID_TOKEN }}

      - name: Build site
        run: hugo

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          if [ github.event_name == 'pull_request' ]; then
            echo "Running netlify preview deploy"
            netlify deploy
          elif [ github.event_name == 'push' ]; then
            echo "Running netlify production deploy"
            netlify deploy --prod
          else
            echo nothing to send to netlify
          fi
        shell: sh

# 
#       - name: Send to rweekly
#         if: github.event_name == 'push'
#         run: |
#           files=$(jack --name-only HEAD~30..HEAD content/blog/)
#           Rscript R/rweekly.R files
          
